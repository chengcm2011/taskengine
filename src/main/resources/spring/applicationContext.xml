<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



	<!-- @Controller, @Service, @Configuration, etc. <mvc:resources mapping="/resources/**" location="/resources/" />-->
	<context:component-scan base-package="com" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:view-controller path="/" view-name="index"/>
	<mvc:annotation-driven />
	<context:annotation-config />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations" value="classpath*:/jdbc.properties" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>

	<bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 将所有具有@Transactional注解的Bean自动配置为声明式事务支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="quartzScheduler" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!--<property name="dataSource" ref="dataSource"></property>-->
		<property name="autoStartup" value="true" />	<!--自动启动 -->
		<property name="startupDelay" value="10" />		<!--延时启动 -->
		<!--<property name="applicationContextSchedulerContextKey"  value="applicationContextKey" />-->
		<!--<property name="configLocation" value="classpath:quartz.properties"/>-->
	</bean>
	<bean id="dynamicSchedulerUtil" class="com.application.taskengine.util.DynamicSchedulerFactory">
		<!-- (轻易不要变更“调度器名称”, 任务创建时会绑定该“调度器名称”) -->
		<property name="scheduler" ref="quartzScheduler"/>
	</bean>

	<bean id="idGeneratorService" class="com.cheng.jdbc.generator.IdGeneratorService" destroy-method="returnOid">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<bean class="com.cheng.jdbc.impl.DefaultDataBaseServiceImpl">
		<property name="dataSource" ref="dataSource"></property>
		<property name="idGeneratorService" ref="idGeneratorService"></property>
	</bean>

	<bean class="com.cheng.web.ApplicationServiceLocator"></bean>

</beans>
